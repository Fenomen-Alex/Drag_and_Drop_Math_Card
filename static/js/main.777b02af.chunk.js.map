{"version":3,"sources":["components/Spot.tsx","components/Card.tsx","App.tsx","index.tsx"],"names":["Spot","props","text","type","spot","handleDrop","useDrop","accept","drop","item","console","log","collect","monitor","isOver","canDrop","dropRef","backgroundColor","className","ref","style","Card","useDrag","opacity","isDragging","dragRef","App","useState","number1","setNumber1","number2","setNumber2","operator","setOperator","DndProvider","backend","HTML5Backend","a","b","Number","toFixed","result","Array","fill","map","n","i","key","o","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAgCeA,EA7BF,SAACC,GACZ,IAAOC,EAAgCD,EAAhCC,KAAMC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,WACzB,EAAqCC,YAAQ,CAC3CC,OAAQJ,EACRK,KAAM,SAAAC,GACJC,QAAQC,IAAIF,GACZJ,EAAWD,EAAMK,IAEnBG,QAAS,SAAAC,GAAO,MAAK,CACnBC,OAAQD,EAAQC,SAChBC,QAASF,EAAQE,cARrB,0BAAQA,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,OAASE,EAA1B,KAYIC,EAAkB,UAItB,OAHIF,IAASE,EAAkB,WAC3BH,IAAQG,EAAkB,WAG1B,yBACIC,UAAU,OACVC,IAAKH,EACLI,MAAO,CAACH,oBAETf,I,QCAMmB,EAxBF,SAACpB,GACZ,IAAOC,EAAcD,EAAdC,KAAMC,EAAQF,EAARE,KACb,EAA6BmB,aAAQ,iBAAO,CACtCnB,OACAM,KAAM,iBAAO,CACXP,SAEFU,QAAS,SAACC,GAAD,MAAc,CACrBU,QAASV,EAAQW,aAAe,GAAM,OAG1C,IATJ,mBAAQD,EAAR,KAAQA,QAAUE,EAAlB,KAWA,OACI,yBACIP,UAAU,OACVC,IAAKM,EACLL,MAAO,CAACG,YAETrB,ICiDMwB,EAhEH,WACV,MAA8BC,mBAAiB,GAA/C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAiB,GAA/C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,mBAAiB,KAAjD,mBAAOK,EAAP,KAAiBC,EAAjB,KAQM5B,EAAa,SAACD,EAAcK,GAChCC,QAAQC,IAAIF,GACC,YAATL,GAAoByB,EAAWpB,EAAKP,MAC3B,YAATE,GAAoB2B,EAAWtB,EAAKP,MAC3B,aAATE,GAAqB6B,EAAYxB,EAAKP,OAG5C,OACI,kBAACgC,EAAA,EAAD,CAAaC,QAASC,KACpB,yBAAKlB,UAAU,OAEb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CACIf,KAAK,SACLD,KAAM0B,EACNxB,KAAK,UACLC,WAAYA,IAEhB,kBAAC,EAAD,CACIF,KAAK,SACLD,KAAM4B,EACN1B,KAAK,UACLC,WAAYA,IAEhB,kBAAC,EAAD,CACIF,KAAK,WACLD,KAAM8B,EACN5B,KAAK,WACLC,WAAYA,IAEhB,yBAAKa,UAAU,SArCV,SAACmB,EAAWC,EAAWN,GACpC,MAAiB,MAAbA,EAAyBK,EAAIC,EAChB,MAAbN,EAAyBK,EAAIC,EAChB,MAAbN,EAAyBK,EAAIC,EAChB,MAAbN,EAAyBO,QAAQF,EAAIC,GAAGE,QAAQ,SAApD,EAiCgCC,CAAOb,EAASE,EAASE,KAGnD,6BACE,yBAAKd,UAAU,iBACZwB,MAAM,IACFC,KAAK,GACLC,KAAI,SAACC,EAAGC,GAAJ,OACD,kBAAC,EAAD,CAAMC,IAAKD,EAAG5C,KAAM4C,EAAG3C,KAAK,eAItC,yBAAKe,UAAU,mBACZ,CAAC,IAAK,IAAK,IAAK,KAAK0B,KAAI,SAACI,EAAGF,GAAJ,OACtB,kBAAC,EAAD,CAAMC,IAAKD,EAAG5C,KAAM8C,EAAG7C,KAAK,qBC1D9C8C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.777b02af.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nconst Spot = (props: { text: number | string, type: string, spot: string, handleDrop: Function }): JSX.Element => {\r\n  const {text, type, spot, handleDrop} = props;\r\n  const [{canDrop, isOver}, dropRef] = useDrop({\r\n    accept: type,\r\n    drop: item => {\r\n      console.log(item)\r\n      handleDrop(spot, item)\r\n    },\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop()\r\n    })\r\n  });\r\n\r\n  let backgroundColor = '#f2f2f2';\r\n  if (canDrop) backgroundColor = '#3db897';\r\n  if (isOver) backgroundColor = '#4bdcb5';\r\n\r\n  return (\r\n      <div\r\n          className=\"spot\"\r\n          ref={dropRef}\r\n          style={{backgroundColor}}\r\n      >\r\n        {text}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Spot;\r\n","import React from 'react';\r\nimport {useDrag} from 'react-dnd';\r\n\r\nconst Card = (props: { text: number | string, type: string }): JSX.Element => {\r\n  const {text, type} = props;\r\n  const [{opacity}, dragRef] = useDrag(() => ({\r\n        type,\r\n        item: () => ({\r\n          text\r\n        }),\r\n        collect: (monitor) => ({\r\n          opacity: monitor.isDragging() ? 0.5 : 1\r\n        })\r\n      }),\r\n      []);\r\n\r\n  return (\r\n      <div\r\n          className=\"card\"\r\n          ref={dragRef}\r\n          style={{opacity}}\r\n      >\r\n        {text}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Spot from \"./components/Spot\";\nimport Card from \"./components/Card\";\n\nconst App = (): JSX.Element => {\n  const [number1, setNumber1] = useState<number>(1);\n  const [number2, setNumber2] = useState<number>(1);\n  const [operator, setOperator] = useState<string>('*');\n  const result = (a: number, b: number, operator: string | number): number | undefined => {\n    if (operator === '+') return a + b;\n    if (operator === '-') return a - b;\n    if (operator === '*') return a * b;\n    if (operator === '/') return Number((a / b).toFixed(2));\n  }\n\n  const handleDrop = (spot: string, item: any) => {\n    console.log(item);\n    if (spot === 'number1') setNumber1(item.text);\n    if (spot === 'number2') setNumber2(item.text);\n    if (spot === 'operator') setOperator(item.text);\n  }\n\n  return (\n      <DndProvider backend={HTML5Backend}>\n        <div className=\"app\">\n          {/* math card */}\n          <div className=\"math-card\">\n            <Spot\n                type=\"number\"\n                text={number1}\n                spot=\"number1\"\n                handleDrop={handleDrop}\n            />\n            <Spot\n                type=\"number\"\n                text={number2}\n                spot=\"number2\"\n                handleDrop={handleDrop}\n            />\n            <Spot\n                type=\"operator\"\n                text={operator}\n                spot=\"operator\"\n                handleDrop={handleDrop}\n            />\n            <div className=\"total\">{result(number1, number2, operator)}</div>\n          </div>\n\n          <div>\n            <div className=\"cards numbers\">\n              {Array(10)\n                  .fill(0)\n                  .map((n, i) => (\n                      <Card key={i} text={i} type=\"number\"/>\n                  ))}\n            </div>\n\n            <div className=\"cards operators\">\n              {['*', '-', '+', '/'].map((o, i) => (\n                  <Card key={i} text={o} type=\"operator\"/>\n              ))}\n            </div>\n          </div>\n        </div>\n      </DndProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}